<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="installing.additional.features"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Software Installation with &helm;</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Once your cluster is ready, you may want to deploy additional software
  that is not installed on &productname; by default. This chapter provides
  instructions on how to install and configure &helm;, the &kube; package 
  manager, and then how to install the &kube; Dashboard. If you intend to 
  deploy &scf; on &productname;, &helm; is required.
 </para>

<sect1 xml:id="installing.helm">
  <title>Deploying &helm; and &tiller;</title>
<para>
&helm; has two parts: &helm; is the client and &tiller; is the server component. 
&helm; runs on your remote workstation that has access to your cluster, and 
&tiller; is installed as a container on &productname; when you run &dashboard; 
for the first 
time. (See <xref linkend="sec.caasp.installquick.conf"/>.)
</para>

 <para>
     You should match the &helm; version with the version of &tiller; 
     that is running on your cluster. The &tiller; binary cannot report its
     version, and you need the version that is packaged inside the &tiller; 
     container. Run the following command from your workstation to query the
     logs:
 </para>
 <screen>
&prompt.user;kubectl logs -l name=tiller --namespace=kube-system | grep "Starting &tiller;"
  [main] 2018/04/04 16:48:27 Starting &tiller; v2.6.1 (tls=false)
</screen>
<para>
   If the log gets overwritten and loses this information, the following command 
   queries the <command>rpm</command> package manager inside the container. This
   works only on &productname;/&scf; installations:
</para>
<screen>
&prompt.user;kubectl exec -it $(kubectl get pods -n kube-system | awk '/tiller/{print$1}') -n kube-system -- rpm -q helm
  helm-2.6.1-1.6.x86_64
</screen>

<para>
    If the Linux distribution on your workstation doesn't provide the correct 
    &helm; version, or you are using some other platform, see the 
    <link xlink:href="https://docs.helm.sh/using_helm/#quickstart">
         &helm; Quickstart Guide</link> for installation instructions and basic 
    usage examples. Download the matching &helm; binary into any directory that 
    is in your PATH on your workstation, such as your <filename>~/bin</filename> 
    directory. Then initialize the client only:
 </para>
 <screen>
&prompt.user;helm init --client-only
 </screen>
 
<para>
The &tiller; version that ships with &productname; is supported by &suse;. While 
&suse; does not provide support for third-party &helm; charts, you can easily 
use them if necessary.
</para>
</sect1>

 <sect1 xml:id="installing.kube.dashboard">
  <title>Installing &kube; Dashboard</title>

  <important>
   <title>Technology Preview</title>
   <para>
    Even though you can install and use the community &kube; dashboard, &productname;
    currently fully supports only &dashboard;.
   </para>
  </important>

<itemizedlist>
<title>Requirements</title>
<listitem>
<para>
Heapster version 1.3.0 or later needs to be installed on the cluster
</para>
</listitem>
<listitem>
<para>
Helm version 2.7.2+ and kubectl version 1.8.0+ recommended
</para>
</listitem>
</itemizedlist>

  <procedure>
   <title>Installation of &kube; Dashboard</title>
   <step>
     <screen>
helm install --name heapster-default --namespace=kube-system stable/heapster --version=0.2.7 --set rbac.create=true
     </screen>
   </step>
   <step>
     <screen>
helm install --namespace=kube-system --name=kubernetes-dashboard stable/kubernetes-dashboard --version=0.6.1
     </screen>
   </step>
   <step>
    <para>
      Connect to any cluster node using SSH.
    </para>
   </step>
   <step>
    <para>
      Visit <literal>http://127.0.0.1:8081/</literal> in your browser. 
      You will be greeted with by a welcome page containing a dialog to configure authentication.
    </para>
   </step>
   <step>
    <para>
      Select <guimenu>token</guimenu> authentication. To retrieve your token refer to the value in your kubeconfig file by running the command:
    </para>
    <screen>
grep "id-token" /path/to/kubeconfig  | awk '{print $2}'
    </screen>
   </step>
   <step>
    <para>
      On login cluster resources and basic metrics are populated.
    </para>
   </step>
  </procedure>

  <procedure>
   <title>Exposing the Dashboard</title>
   <step>
<screen>helm upgrade kubernetes-dashboard stable/kubernetes-dashboard --set service.type=NodePort
</screen>
   </step>
   <step>
    <para>
      Now you may visit the dashboard at <literal>https://<replaceable>WORKER_NODE_ADDRESS</replaceable>:<replaceable>NODE_PORT</replaceable></literal> in your browser from outside of your cluster.
    </para>
   </step>
  </procedure>

 </sect1>
</chapter>
